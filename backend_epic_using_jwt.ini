; =============================================================================
; EPIC FHIR Backend Authentication Configuration
; Source: EPIC FHIR Documentation and Implementation Guide
; =============================================================================

; Application folder path
app_folder_name = C:\FHIR\BackendEpic
epic_data_export_folder = ${app_folder_name}\epic_data_export

; Key file paths (relative to app_folder_name)
private_key = ${app_folder_name}\private.key
public_key = ${app_folder_name}\public.key
base64_public_key = ${app_folder_name}\base64_public_key.pem

; =============================================================================
; RSA Key Generation Configuration
; Source: EPIC's JWT Documentation - "Creating a JWT" section
; Requirements for EPIC's backend OAuth 2.0
; =============================================================================
rsa_key_size = 2048
rsa_public_encoding = spki
rsa_private_encoding = pkcs8

; =============================================================================
; JWT Configuration
; Source: jwt.io and EPIC's JWT Documentation
; Header requirements from EPIC:
; {
;   "alg": "RS384",
;   "typ": "JWT"
; }
; =============================================================================
jwt_algorithm = RS384
jwt_expiry_minutes = 5  ; JWT expiration time in minutes

; =============================================================================
; EPIC Authentication Configuration
; Source: EPIC's Non-Production Testing Documentation
; 
; client_id: NON-PRODUCTION client ID used as both 'iss' and 'sub' in JWT claims
; token_endpoint: From EPIC's capability statement at:
;                /.well-known/smart-configuration
;
; grant_type & client_assertion_type: From EPIC's documentation
; "Step 2: POSTing the JWT to Token Endpoint to Obtain Access Token"
; Note: client_assertion_type is URL-decoded from:
;       urn%3Aietf%3Aparams%3Aoauth%3Aclient-assertion-type%3Ajwt-bearer
; =============================================================================
client_id = e6adc0f2-7e22-4a86-9f11-5b8bae6e5190
token_endpoint = https://fhir.epic.com/interconnect-fhir-oauth/oauth2/token
grant_type = client_credentials
client_assertion_type = urn:ietf:params:oauth:client-assertion-type:jwt-bearer

; =============================================================================
; EPIC Test Patient ID
; Source: EPIC's Non-Production Testing Documentation
; Used in URL pattern: {epic_endpoint}Patient/{test_patient_id}
; =============================================================================
test_patient_id = erXuFYUfucBZaryVksYEcMg3

; =============================================================================
; EPIC FHIR Endpoint
; Source: EPIC's FHIR R4 API Documentation: https://open.epic.com/MyApps/Endpoints
; Base URL for all FHIR resource requests
; Used after obtaining access token for actual API calls
; 
; =============================================================================
epic_endpoint = https://fhir.epic.com/interconnect-fhir-oauth/api/FHIR/R4/

; =============================================================================
; EPIC Data Export Configuration
; Source: EPIC FHIR Documentation - Observation Resource
; Configures how laboratory data is exported
; =============================================================================
epic_data_export_folder = ${app_folder_name}\epic_data_export
lab_data_category = laboratory
lab_data_format = application/fhir+ndjson
lab_data_fallback_formats = application/json,application/fhir+json

; Bulk download configuration
lab_data_max_attempts = 30      ; Maximum number of status checks
lab_data_check_interval = 5000  ; Milliseconds between status checks
lab_data_timeout = 150000       ; Total timeout in milliseconds (2.5 minutes)

; Optional: Configure specific lab result types or date ranges
; lab_data_date_from = 2024-01-01
; lab_data_date_to = 2024-12-31
; lab_data_max_results = 1000

; Add this to your existing INI file
epic_sandbox_roster = ${app_folder_name}\epic_sandbox_roster.csv
epic_sandbox_resources = ${app_folder_name}\epic_sandbox_resources.csv

; Add this to your existing INI file
[email]
smtp_host = 127.0.0.1
smtp_port = 1025
smtp_secure = false
notification_to = ajay@aprashar.com
notification_from = ajay@aprashar.com
# Credentials loaded from environment variables

[api_settings]
page_size = 100
max_pages = 100

[data_export]
format = application/fhir+json
ndjson_format = application/fhir+ndjson
json_format = application/json
default_count = 100

[file_patterns]
resource_data_file = ${ResourceType}_data_${Timestamp}.ndjson
timestamp_format = YYYY-MM-DDTHH-mm-ss-SSSZ
